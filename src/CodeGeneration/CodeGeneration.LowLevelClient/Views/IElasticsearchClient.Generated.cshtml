using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Elasticsearch.Net_1_7_2.Connection;

///Generated File Please Do Not Edit Manually
namespace Elasticsearch.Net_1_7_2
{
	///<summary>
	///Raw operations with elasticsearch
	///<pre>
	///This file is automatically generated from https://github.com/elasticsearch/elasticsearch-rest-api-spec
	///</pre>
	///<pre>
	///Generated of commit @Model.Commit
	///</pre>
	///</summary>
	public partial interface IElasticsearchClient
	{	
		//IConnection Connection { get; }
		//IConnectionConfigurationValues Settings { get; }
		//IElasticsearchSerializer Serializer { get; }

		@foreach(var kv in Model.Endpoints)
		{
			var identifier = kv.Key;
			var endpoint = kv.Value;
			foreach(var method in endpoint.GetCsharpMethods()) 
			{

		<text>///<summary>Represents a @method.HttpMethod on @method.Path
		///<para></para>Returns: @Raw(method.ReturnDescription)
		///<para>See also: @method.Documentation</para>	
		///</summary>
			@foreach (var part in method.Parts)
			{
		<text>@Raw("///<param name=\""+part.Name+"\">")@part.Description@Raw("</param>")</text>
			}
		@Raw(@"///<param name=""requestParameters"">
		///Optional function to specify any additional request parameters 
		///<para>Querystring values, connection configuration specific to this request, deserialization state.</para>
		///</param>")
		@Raw("///<returns>"+method.ReturnDescription)
		///@Raw("</returns>")
		
		@Raw(method.ReturnType) @(method.FullName)@(Raw(method.ReturnTypeGeneric))(@Raw(method.Arguments));
		</text>
			}
		}
	}
}